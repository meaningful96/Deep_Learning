m = nn.ConstantPad2d(2, 3.5)
input = torch.randn(1, 2, 2)
print(input)
#################################################################
tensor([[[ 1.6585,  0.4320],
         [-0.8701, -0.4649]]])
#################################################################


print(m(input))
#################################################################
tensor([[[ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  1.6585,  0.4320,  3.5000,  3.5000],
         [ 3.5000,  3.5000, -0.8701, -0.4649,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000,  3.5000]]])
##################################################################

# 다른면에 다른 패딩 사용
m = nn.ConstantPad2d((3, 0, 2, 1), 3.5)
print(m(input))
##################################################################
tensor([[[ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  3.5000,  1.6585,  0.4320],
         [ 3.5000,  3.5000,  3.5000, -0.8701, -0.4649],
         [ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000]]])
##################################################################

##################################################################################################


import torch
import torch.nn as nn

# Example 2D tensor (image) with shape (batch_size, channels, height, width)
input_tensor = torch.rand(1, 3, 4, 4)

# Define the amount of padding for each side (left, right, top, bottom)
padding = (1, 2, 1, 2)

# Create the ConstantPad2d module
constant_pad_layer = nn.ConstantPad2d(padding, value=0.0)

# Apply padding to the input tensor
output_tensor = constant_pad_layer(input_tensor)

# Output tensor will have shape (1, 3, 7, 8) after padding
print(output_tensor.shape)
# torch.Size([1, 3, 7, 7])
